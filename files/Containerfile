FROM docker.io/ghost:5-alpine as cloudinary
RUN apk add g++ make python3
RUN su-exec node yarn add ghost-storage-cloudinary

FROM docker.io/ghost:5-alpine
ARG cloudinary_cloud_name
ARG cloudinary_api_key
ARG cloudinary_api_secret
ARG cloudinary_folder
COPY --chown=node:node --from=cloudinary $GHOST_INSTALL/node_modules $GHOST_INSTALL/node_modules
COPY --chown=node:node --from=cloudinary $GHOST_INSTALL/node_modules/ghost-storage-cloudinary $GHOST_INSTALL/content/adapters/storage/ghost-storage-cloudinary

RUN set -ex; \
    #storage
    su-exec node ghost config storage.active ghost-storage-cloudinary; \
    #useDatedFolder
    su-exec node ghost config storage.ghost-storage-cloudinary.useDatedFolder false;\
    #auth
    su-exec node ghost config storage.ghost-storage-cloudinary.auth.cloud_name $cloudinary_cloud_name; \
    su-exec node ghost config storage.ghost-storage-cloudinary.auth.api_key $cloudinary_api_key; \
    su-exec node ghost config storage.ghost-storage-cloudinary.auth.api_secret $cloudinary_api_secret; \
    #upload
    su-exec node ghost config storage.ghost-storage-cloudinary.upload.folder $cloudinary_folder; \
    su-exec node ghost config storage.ghost-storage-cloudinary.upload.use_filename true; \
    su-exec node ghost config storage.ghost-storage-cloudinary.upload.unique_filename false; \
    su-exec node ghost config storage.ghost-storage-cloudinary.upload.overwrite false; \
    #fetch
    su-exec node ghost config storage.ghost-storage-cloudinary.fetch.quality auto; \
    su-exec node ghost config storage.ghost-storage-cloudinary.fetch.secure true; \
    su-exec node ghost config storage.ghost-storage-cloudinary.fetch.cdn_subdomain true; \
    #imageOptiomization
    su-exec node ghost config imageOptimization.resize false;